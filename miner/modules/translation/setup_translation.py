import os
import base64
folder_path = f'modules/translation'

file_data = [
    ('translation_module.py', 'aW1wb3J0IG9zCmltcG9ydCBhcmdwYXJzZQppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHRvcmNoCmZyb20gcHlkYW50aWMgaW1wb3J0IEJhc2VNb2RlbCwgQ29uZmlnRGljdAoKZnJvbSAuZGF0YV9tb2RlbHMgaW1wb3J0IFRyYW5zbGF0aW9uUmVxdWVzdCwgVHJhbnNsYXRpb25Db25maWcsIE1pbmVyUmVxdWVzdCwgQmFzZU1vZHVsZSwgTW9kdWxlQ29uZmlnLCBCYXNlTWluZXIsIE1pbmVyQ29uZmlnLCByb3V0ZXIKZnJvbSAudHJhbnNsYXRpb24gaW1wb3J0IFNlYW1sZXNzVHJhbnNsYXRvcgpmcm9tIHR5cGluZyBpbXBvcnQgQW55LCBPcHRpb25hbApmcm9tIGRvdGVudiBpbXBvcnQgbG9hZF9kb3RlbnYKCmxvYWRfZG90ZW52KCkKCnRyYW5zbGF0aW9uX3NldHRpbmdzID0gVHJhbnNsYXRpb25Db25maWcoKQp0cmFuc2xhdGlvbl9zZXR0aW5ncy5tb2R1bGUgPSBTZWFtbGVzc1RyYW5zbGF0b3IoKQptaW5lcl9zZXR0aW5ncyA9IE1pbmVyQ29uZmlnKCkKCgpjbGFzcyBUcmFuc2xhdGlvbk1pbmVyKEJhc2VNaW5lcik6CiAgICBtb2R1bGVfY29uZmlnOiBNaW5lckNvbmZpZwogICAgbW9kdWxlOiBCYXNlTW9kdWxlCiAgICByb3V0ZXI6IEFueQogICAgCiAgICBkZWYgX19pbml0X18oc2VsZiwgbW9kdWxlX2NvbmZpZzogT3B0aW9uYWxbVHJhbnNsYXRpb25Db25maWddID0gTm9uZSk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygKICAgICAgICAgICAgY29uZmlnPW1vZHVsZV9jb25maWcsIAogICAgICAgICAgICByb3V0ZXI9cm91dGVyCiAgICAgICAgICAgICkKICAgICAgICBzZWxmLm1vZHVsZV9jb25maWcgPSBtb2R1bGVfY29uZmlnCiAgICAgICAgc2VsZi5tb2R1bGUgPSBtb2R1bGVfY29uZmlnLm1vZHVsZQogICAgICAgIHNlbGYucm91dGVyID0gcm91dGVyCiAgICAgICAgc2VsZi5rZXlfbmFtZSA9IG1vZHVsZV9jb25maWcua2V5X25hbWUKICAgICAgICBzZWxmLmtleV9mb2xkZXJfcGF0aCA9IG1vZHVsZV9jb25maWcua2V5X2ZvbGRlcl9wYXRoCiAgICAgICAgc2VsZi5ob3N0X2FkZHJlc3MgPSBtb2R1bGVfY29uZmlnLmhvc3RfYWRkcmVzcwogICAgICAgIHNlbGYuZXh0ZXJuYWxfYWRkcmVzcyA9IG1vZHVsZV9jb25maWcuZXh0ZXJuYWxfYWRkcmVzcwogICAgICAgIHNlbGYuY2FsbF90aW1lb3V0ID0gbW9kdWxlX2NvbmZpZy5jYWxsX3RpbWVvdXQKICAgICAgICBzZWxmLm1pbmVyX2tleXBhdGggPSBtb2R1bGVfY29uZmlnLm1pbmVyX2tleV9wYXRoCiAgICAgICAgc2VsZi5wb3J0ID0gbW9kdWxlX2NvbmZpZy5wb3J0CiAgICAgICAgc2VsZi5zczU4X2FkZHJlc3MgPSBtb2R1bGVfY29uZmlnLnNzNThfYWRkcmVzcwogICAgICAgIHNlbGYudXNlX3Rlc3RuZXQgPSBtb2R1bGVfY29uZmlnLnVzZV90ZXN0bmV0CgogICAgZGVmIHByb2Nlc3Moc2VsZiwgcmVxdWVzdDogVHJhbnNsYXRpb25SZXF1ZXN0KSAtPiBBbnk6CiAgICAgICAgIiIiUHJvY2VzcyBhIHJlcXVlc3QgbWFkZSB0byB0aGUgbW9kdWxlLiIiIgogICAgICAgIGlmIHJlcXVlc3QuaW5mZXJlbmNlX3R5cGUgPT0gInRyYW5zbGF0aW9uIjoKICAgICAgICAgICAgcmV0dXJuIHNlbGYubW9kdWxlLnRyYW5zbGF0aW9uX2luZmVyZW5jZSgKICAgICAgICAgICAgICAgIGluX2ZpbGU9cmVxdWVzdC5yZXF1ZXN0X2RhdGEuaW5fZmlsZSwKICAgICAgICAgICAgICAgIHRhc2tfc3RyaW5nPXJlcXVlc3QucmVxdWVzdF9kYXRhLnRhc2tfc3RyaW5nLAogICAgICAgICAgICAgICAgdGFyZ2V0X2xhbmd1YWdlcz1yZXF1ZXN0LnJlcXVlc3RfZGF0YS50YXJnZXRfbGFuZ3VhZ2UsCiAgICAgICAgICAgICkKICAgIAogICAgCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBtaW5lciA9IFRyYW5zbGF0aW9uTWluZXIoCiAgICAgICAgbW9kdWxlX2NvbmZpZz10cmFuc2xhdGlvbl9zZXR0aW5ncwogICAgICAgICkKCiAgICBtaW5lci5zdGFydF9taW5lcl9zZXJ2ZXIodHJhbnNsYXRpb25fc2V0dGluZ3MuaG9zdF9hZGRyZXNzLCB0cmFuc2xhdGlvbl9zZXR0aW5ncy5wb3J0KQ=='),
    ('translation.py', 'aW1wb3J0IHRvcmNoYXVkaW8KaW1wb3J0IHRvcmNoCgpmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCmZyb20gbG9ndXJ1IGltcG9ydCBsb2dnZXIKZnJvbSB0eXBpbmcgaW1wb3J0IFVuaW9uLCBUdXBsZSwgTGlzdCwgRGljdAoKZnJvbSBtb2R1bGVzLnRyYW5zbGF0aW9uLnNlYW1sZXNzLnNyYy5zZWFtbGVzc19jb21tdW5pY2F0aW9uLmluZmVyZW5jZS50cmFuc2xhdG9yIGltcG9ydCBUcmFuc2xhdG9yLCBNb2RhbGl0eQpmcm9tIG1vZHVsZXMudHJhbnNsYXRpb24uZGF0YV9tb2RlbHMgaW1wb3J0IFRBUlJHRVRfTEFOR1VBR0VTLCBUQVNLX1NUUklOR1MKCgpjbGFzcyBTZWFtbGVzc1RyYW5zbGF0b3I6CiAgICAiIiJBIGNsYXNzIGZvciBwZXJmb3JtaW5nIHRyYW5zbGF0aW9uIHRhc2tzIHVzaW5nIGEgc3BlY2lmaWVkIG1vZGVsIGFuZCB2b2NvZGVyLgoKICAgIEF0dHJpYnV0ZXM6CiAgICAgICAgbW9kZWxfbmFtZSAoc3RyKTogVGhlIG5hbWUgb2YgdGhlIHRyYW5zbGF0aW9uIG1vZGVsLgogICAgICAgIHZvY29kZXJfbmFtZSAoc3RyKTogVGhlIG5hbWUgb2YgdGhlIHZvY29kZXIuCiAgICAgICAgdHJhbnNsYXRvciAoVHJhbnNsYXRvcik6IFRoZSB0cmFuc2xhdG9yIG9iamVjdC4KICAgICAgICB0YXJnZXRfbGFuZ3VhZ2VzIChEaWN0W3N0ciwgc3RyXSk6IEEgZGljdGlvbmFyeSBtYXBwaW5nIGxhbmd1YWdlIG5hbWVzIHRvIGxhbmd1YWdlIGNvZGVzLgogICAgICAgIHRhc2tfc3RyaW5ncyAoRGljdFtzdHIsIHN0cl0pOiBBIGRpY3Rpb25hcnkgbWFwcGluZyB0YXNrIHN0cmluZ3MgdG8gYWJicmV2aWF0aW9ucy4KCiAgICBBcmdzOgogICAgICAgIGluX2ZpbGUgKFVuaW9uW3N0ciwgUGF0aF0pOiBUaGUgaW5wdXQgZmlsZSBmb3IgdHJhbnNsYXRpb24uCiAgICAgICAgdGFza19zdHJpbmcgKHN0cik6IFRoZSB0eXBlIG9mIHRyYW5zbGF0aW9uIHRhc2suCiAgICAgICAgdGFyZ2V0X2xhbmd1YWdlcyAoTGlzdFtzdHJdKTogVGhlIHRhcmdldCBsYW5ndWFnZXMgZm9yIHRyYW5zbGF0aW9uLgoKICAgIFJldHVybnM6CiAgICAgICAgVHVwbGVbUGF0aCwgUGF0aF0gfCBOb25lOiBBIHR1cGxlIGNvbnRhaW5pbmcgdGhlIHBhdGhzIHRvIHRoZSB0cmFuc2xhdGVkIHRleHQgYW5kIGF1ZGlvIGZpbGVzLCBvciBOb25lIGlmIHRyYW5zbGF0aW9uIGZhaWxzLgogICAgIiIiCgogICAgbW9kZWxfbmFtZTogc3RyCiAgICB2b2NvZGVyX25hbWU6IHN0cgogICAgdHJhbnNsYXRvcjogVHJhbnNsYXRvcgogICAgdGFyZ2V0X2xhbmd1YWdlczogRGljdFtzdHIsIHN0cl0KICAgIHRhc2tfc3RyaW5nczogRGljdFtzdHIsIHN0cl0KCiAgICBkZWYgX19pbml0X18oc2VsZikgLT4gTm9uZToKICAgICAgICAiIiIKICAgICAgICBJbml0aWFsaXplcyB0aGUgU2VhbWxlc3NUcmFuc2xhdG9yIG9iamVjdCB3aXRoIHRoZSBzcGVjaWZpZWQgbW9kZWwgYW5kIHZvY29kZXIgbmFtZXMsCiAgICAgICAgYW5kIGNyZWF0ZXMgYSB0cmFuc2xhdG9yIG9iamVjdCB1c2luZyB0aGUgc3BlY2lmaWVkIG1vZGVsIGFuZCB2b2NvZGVyLiBUaGUgdHJhbnNsYXRvcgogICAgICAgIG9iamVjdCBpcyBjcmVhdGVkIHdpdGggdGhlIGRldmljZSBzZXQgdG8gImN1ZGE6MCIgYW5kIHRoZSBkYXRhIHR5cGUgc2V0IHRvICJ0b3JjaC5mbG9hdDE2Ii4KICAgICAgICBUaGUgdGFyZ2V0X2xhbmd1YWdlcyBkaWN0aW9uYXJ5IG1hcHMgbGFuZ3VhZ2UgbmFtZXMgdG8gbGFuZ3VhZ2UgY29kZXMsIGFuZCB0aGUgdGFza19zdHJpbmdzCiAgICAgICAgZGljdGlvbmFyeSBtYXBzIHRhc2sgc3RyaW5ncyB0byBhYmJyZXZpYXRpb25zLgogICAgICAgICIiIgogICAgICAgIHNlbGYubW9kZWxfbmFtZSA9ICJzZWFtbGVzc000VF92Ml9sYXJnZSIKICAgICAgICBzZWxmLnZvY29kZXJfbmFtZSA9ICgKICAgICAgICAgICAgInZvY29kZXJfdjIiCiAgICAgICAgICAgIGlmIHNlbGYubW9kZWxfbmFtZSA9PSAic2VhbWxlc3NNNFRfdjJfbGFyZ2UiCiAgICAgICAgICAgIGVsc2UgInZvY29kZXJfMzZsYW5ncyIKICAgICAgICApCgogICAgICAgIHNlbGYudHJhbnNsYXRvciA9IFRyYW5zbGF0b3IoCiAgICAgICAgICAgIG1vZGVsX25hbWVfb3JfY2FyZD1zZWxmLm1vZGVsX25hbWUsCiAgICAgICAgICAgIHZvY29kZXJfbmFtZV9vcl9jYXJkPXNlbGYudm9jb2Rlcl9uYW1lLAogICAgICAgICAgICBkZXZpY2U9dG9yY2guZGV2aWNlKGRldmljZT0iY3VkYTowIiksCiAgICAgICAgICAgIGR0eXBlPXRvcmNoLmZsb2F0MTYsCiAgICAgICAgKQogICAgICAgIAoKICAgIGRlZiB0cmFuc2xhdGlvbl9pbmZlcmVuY2UoCiAgICAgICAgc2VsZiwKICAgICAgICBpbl9maWxlOiBVbmlvbltzdHIsIFBhdGhdLAogICAgICAgIHRhc2tfc3RyaW5nOiBzdHIgPSAiczJzdCIsCiAgICAgICAgdGFyZ2V0X2xhbmd1YWdlczogTGlzdFtzdHJdID0gWyJlbmciXSwKICAgICkgLT4gVHVwbGVbUGF0aCwgUGF0aF0gfCBOb25lOgogICAgICAgICIiIgogICAgICAgIFBlcmZvcm0gdHJhbnNsYXRpb24gaW5mZXJlbmNlIG9uIHRoZSBnaXZlbiBpbnB1dCBmaWxlLgoKICAgICAgICBBcmdzOgogICAgICAgICAgICBpbl9maWxlIChVbmlvbltzdHIsIFBhdGhdKTogVGhlIHBhdGggdG8gdGhlIGlucHV0IGZpbGUuCiAgICAgICAgICAgIHRhc2tfc3RyaW5nIChzdHIsIG9wdGlvbmFsKTogVGhlIHRhc2sgc3RyaW5nLiBEZWZhdWx0cyB0byAiczJzdCIuCiAgICAgICAgICAgIHRhcmdldF9sYW5ndWFnZXMgKExpc3Rbc3RyXSwgb3B0aW9uYWwpOiBUaGUgbGlzdCBvZiB0YXJnZXQgbGFuZ3VhZ2VzLiBEZWZhdWx0cyB0byBbImVuZyJdLgoKICAgICAgICBSZXR1cm5zOgogICAgICAgICAgICBUdXBsZVtQYXRoLCBQYXRoXSB8IE5vbmU6IEEgdHVwbGUgY29udGFpbmluZyB0aGUgYWJzb2x1dGUgcGF0aHMgdG8gdGhlIG91dHB1dCB0ZXh0IGZpbGUgYW5kIG91dHB1dCBhdWRpbyBmaWxlLCBvciBOb25lIGlmIHRoZSBpbnB1dCBmaWxlIGlzIG5vdCBmb3VuZC4KCiAgICAgICAgUmFpc2VzOgogICAgICAgICAgICBGaWxlTm90Rm91bmRFcnJvcjogSWYgdGhlIGlucHV0IGZpbGUgaXMgbm90IGZvdW5kLgogICAgICAgICAgICBWYWx1ZUVycm9yOiBJZiB0aGUgdGFzayBzdHJpbmcgb3IgdGFyZ2V0IGxhbmd1YWdlIGlzIGludmFsaWQuCgogICAgICAgICIiIgoKICAgICAgICBpZiBub3QgUGF0aChpbl9maWxlKS5leGlzdHMoKToKICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGYiRmlsZSB7aW5fZmlsZX0gbm90IGZvdW5kIikKICAgICAgICAgICAgcmFpc2UgRmlsZU5vdEZvdW5kRXJyb3IoZiJGaWxlIHtpbl9maWxlfSBub3QgZm91bmQiKQoKICAgICAgICBpbnB1dF9maWxlID0gUGF0aChpbl9maWxlKQogICAgICAgIG91dHB1dF90ZXh0ID0gUGF0aChmIm1vZGVsL291dHB1dC97aW5wdXRfZmlsZS5zdGVtfS50eHQiKQogICAgICAgIG91dHB1dF9hdWRpbyA9IFBhdGgoZiJtb2RlbC9vdXRwdXQve2lucHV0X2ZpbGUuc3RlbX0ud2F2IikKCiAgICAgICAgdGFza19zdHI6IHN0ciA9IHNlbGYudGFza19zdHJpbmdzW3Rhc2tfc3RyaW5nXQogICAgICAgIGlmIG5vdCB0YXNrX3N0cjoKICAgICAgICAgICAgbG9nZ2VyLmVycm9yKCJJbnZhbGlkIHRhc2sgc3RyaW5nIikKICAgICAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigiSW52YWxpZCB0YXNrIHN0cmluZyIpCgogICAgICAgIGZvciB0Z3RfbGFuZyBpbiB0YXJnZXRfbGFuZ3VhZ2VzOgoKICAgICAgICAgICAgdGd0X2xhbmc6IHN0ciA9IHNlbGYudGFyZ2V0X2xhbmd1YWdlc1t0Z3RfbGFuZ10KICAgICAgICAgICAgaWYgbm90IHRndF9sYW5nOgogICAgICAgICAgICAgICAgbG9nZ2VyLmVycm9yKCJJbnZhbGlkIHRhcmdldCBsYW5ndWFnZSIpCiAgICAgICAgICAgICAgICByYWlzZSBWYWx1ZUVycm9yKCJJbnZhbGlkIHRhcmdldCBsYW5ndWFnZSIpCgogICAgICAgICAgICB0ZXh0X291dHB1dCwgc3BlZWNoX291dHB1dCA9IHNlbGYudHJhbnNsYXRvci5wcmVkaWN0KAogICAgICAgICAgICAgICAgaW5wdXQ9c3RyKG9iamVjdD1pbl9maWxlKSwKICAgICAgICAgICAgICAgIHRhc2tfc3RyPXRhc2tfc3RyLAogICAgICAgICAgICAgICAgdGd0X2xhbmc9dGd0X2xhbmcsCiAgICAgICAgICAgICkKICAgICAgICAgICAgbG9nZ2VyLmluZm8oZiJUcmFuc2xhdGVkIHRleHQgaW4ge3RndF9sYW5nfToge3RleHRfb3V0cHV0WzBdfSIpCgogICAgICAgICAgICBpZiBzcGVlY2hfb3V0cHV0OgogICAgICAgICAgICAgICAgdG9yY2hhdWRpby5zYXZlKAogICAgICAgICAgICAgICAgICAgIHVyaT1vdXRwdXRfYXVkaW8sCiAgICAgICAgICAgICAgICAgICAgc3JjPXNwZWVjaF9vdXRwdXQuYXVkaW9fd2F2c1swXVswXS50byh0b3JjaC5mbG9hdDMyKS5jcHUoKSwKICAgICAgICAgICAgICAgICAgICBzYW1wbGVfcmF0ZT1zcGVlY2hfb3V0cHV0LnNhbXBsZV9yYXRlLAogICAgICAgICAgICAgICAgKQogICAgICAgICAgICBpZiB0ZXh0X291dHB1dDoKICAgICAgICAgICAgICAgIG91dHB1dF90ZXh0LndyaXRlX3RleHQoCiAgICAgICAgICAgICAgICAgICAgZGF0YT1zdHIob2JqZWN0PXRleHRfb3V0cHV0WzBdKSwgZW5jb2Rpbmc9InV0Zi04IgogICAgICAgICAgICAgICAgKQoKICAgICAgICAgICAgbG9nZ2VyLmluZm8oIlRyYW5zbGF0ZWQgdGFyZ2V0IGZpbGUiKQoKICAgICAgICAgICAgcmV0dXJuIG91dHB1dF90ZXh0LmFic29sdXRlKCksIG91dHB1dF9hdWRpby5hYnNvbHV0ZSgpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHByaW50KCJUcmFuc2xhdGlvbiBNb2R1bGUiKQogICAg'),
    ('__init__.py', ''),
    ('data_models.py', 'ZnJvbSBweWRhbnRpYyBpbXBvcnQgQmFzZU1vZGVsCmZyb20gdHlwaW5nIGltcG9ydCBEaWN0LCBVbmlvbiwgT3B0aW9uYWwsIEFueQpmcm9tIGRhdGFfbW9kZWxzIGltcG9ydCBNaW5lclJlcXVlc3QKZnJvbSBtb2R1bGVzLnRyYW5zbGF0aW9uLnRyYW5zbGF0aW9uIGltcG9ydCBNb2RhbGl0eQoKaW1wb3J0IHRvcmNoCgpmcm9tIGVudW0gaW1wb3J0IEVudW0KCgpjbGFzcyBUQVNLX1NUUklOR1MoRW51bSk6CiAgICBzcGVlY2gydGV4dCA9ICJzMnR0IgogICAgc3BlZWNoMnNwZWVjaCA9ICJzMnN0IgogICAgYXV0b19zcGVlY2hfcmVjb2duaXRpb24gPSAiYXNyIgogICAgdGV4dDJzcGVlY2ggPSAidDJzdCIKICAgIHRleHQydGV4dCA9ICJ0MnR0IgoKCmNsYXNzIFRBUlJHRVRfTEFOR1VBR0VTKEVudW0pOgogICAgQWZyaWthYW5zID0gImFmIgogICAgQW1oYXJpYyA9ICJhbSIKICAgIEFyYWJpYyA9ICJhciIKICAgIEFzdHVyaWFuID0gImFzdCIKICAgIEF6ZXJiYWlqYW5pID0gImF6IgogICAgQmFzaGtpciA9ICJiYSIKICAgIEJlbGFydXNpYW4gPSAiYmUiCiAgICBCdWxnYXJpYW4gPSAiYmciCiAgICBCZW5nYWxpID0gImJuIgogICAgQnJldG9uID0gImJyIgogICAgQm9zbmlhbiA9ICJicyIKICAgIENhdGFsYW5WYWxlbmNpYSA9ICJjYSIKICAgIENlYnVhbm8gPSAiY2ViIgogICAgQ3plY2ggPSAiY3MiCiAgICBXZWxzaCA9ICJjeSIKICAgIERhbmlzaCA9ICJkYSIKICAgIEdlcm1hbiA9ICJkZSIKICAgIEdyZWVlayA9ICJlbCIKICAgIEVuZ2xpc2ggPSAiZW4iCiAgICBTcGFuaXNoID0gImVzIgogICAgRXN0b25pYW4gPSAiZXQiCiAgICBQZXJzaWFuID0gImZhIgogICAgRnVsYWggPSAiZmYiCiAgICBGaW5uaXNoID0gImZpIgogICAgRnJlbmNoID0gImZyIgogICAgV2VzdGVybkZyaXNpYSA9ICJmeSIKICAgIElyaXNoID0gImdhIgogICAgR2FlbGljX1Njb3R0aXNoID0gImdkIgogICAgR2FsaWNpYW4gPSAiZ2wiCiAgICBHdWphcmF0aSA9ICJndSIKICAgIEhhdXNhID0gImhhIgogICAgSGVicmV3ID0gImhlIgogICAgSGluZGkgPSAiaGkiCiAgICBDcm9hdGlhbiA9ICJociIKICAgIEhhaXRpYW5fQ3Jlb2xlID0gImh0IgogICAgSHVuZ2FyaWFuID0gImh1IgogICAgQXJtZW5pYW4gPSAiaHkiCiAgICBJbmRvbmVzaWFuID0gImlkIgogICAgSWdibyA9ICJpZyIKICAgIElsb2tvID0gImlsbyIKICAgIEljZWxhbmRpYyA9ICJpcyIKICAgIEl0YWxpYW4gPSAiaXQiCiAgICBKYXBhbmVzZSA9ICJqYSIKICAgIEphdmFuZXNlID0gImp2IgogICAgR2VvcmdpYW4gPSAia2EiCiAgICBLYXpha2ggPSAia2siCiAgICBDZW50cmFsS2htZSA9ICJrbSIKICAgIEthbm5hZGEgPSAia24iCiAgICBLb3JlYW4gPSAia28iCiAgICBMdXhlbWJvdXJnaXNoID0gImxiIgogICAgR2FuZGEgPSAibGciCiAgICBMaW5nYWxhID0gImxuIgogICAgTGFvID0gImxvIgogICAgTGl0aHVhbmlhbiA9ICJsdCIKICAgIExhdHZpYW4gPSAibHYiCiAgICBNYWxhZ2FzeSA9ICJtZyIKICAgIE1hY2Vkb25pYW4gPSAibWsiCiAgICBNYWxheWFsYW0gPSAibWwiCiAgICBNb25nb2xpYW4gPSAibW4iCiAgICBNYXJhdGhpID0gIm1yIgogICAgTWFsYXkgPSAibXMiCiAgICBCdXJtZXNlID0gIm15IgogICAgTmVwYWxpID0gIm5lIgogICAgRHV0Y2hfRmxlbWlzaCA9ICJubCIKICAgIE5vcndlZ2lhbiA9ICJubyIKICAgIE5vcnRoZXJuU290aCA9ICJucyIKICAgIE9jY2l0YW4gPSAib2MiCiAgICBPcml5YSA9ICJvciIKICAgIFBhbmphYmkgPSAicGEiCiAgICBQb2xpc2ggPSAicGwiCiAgICBQdXNodG8gPSAicHMiCiAgICBQb3J0dWd1ZXNlID0gInB0IgogICAgUm9tYW5pYW4gPSAicm8iCiAgICBSdXNzaWFuID0gInJ1IgogICAgU2luZGhpID0gInNkIgogICAgU2luaGFsYSA9ICJzaSIKICAgIFNsb3ZhayA9ICJzayIKICAgIFNsb3ZlbmlhbiA9ICJzbCIKICAgIFNvbWFsaSA9ICJzbyIKICAgIEFsYmFuaWFuID0gInNxIgogICAgU2VyYmlhbiA9ICJzciIKICAgIFN3YXRpID0gInNzIgogICAgU3VuZGFuZXNlID0gInN1IgogICAgU3dlZGlzaCA9ICJzdiIKICAgIFN3YWhpbGkgPSAic3ciCiAgICBUYW1pbCA9ICJ0YSIKICAgIFRoYWkgPSAidGgiCiAgICBUYWdhbG9nID0gInRsIgogICAgVHN3YW5hID0gInRuIgogICAgVHVya2lzaCA9ICJ0ciIKICAgIFVrcmFpbmlhbiA9ICJ1ayIKICAgIFVyZHUgPSAidXIiCiAgICBVemJlayA9ICJ1eiIKICAgIFZpZXRuYW1lc2UgPSAidmkiCiAgICBXb2xvZiA9ICJ3byIKICAgIFhob3NhID0gInhoIgogICAgWWlkZGlzaCA9ICJ5aSIKICAgIFlvcnViYSA9ICJ5byIKICAgIENoaW5lc2UgPSAiemgiCiAgICBadWx1ID0gInp1IgogICAgCgpjbGFzcyBNb2R1bGVDb25maWcoQmFzZU1vZGVsKToKICAgIG1vZGVsX25hbWVfb3JfY2FyZDogVW5pb25bc3RyLCBBbnldID0gInNlYW1sZXNzTTRUX1YyX2xhcmdlIgogICAgdm9jb2Rlcl9uYW1lOiBzdHIgPSAidm9jb2Rlcl92MiIgaWYgbW9kZWxfbmFtZV9vcl9jYXJkID09ICJzZWFtbGVzc000VF9WMl9sYXJnZSIgZWxzZSAidm9jb2Rlcl8zNmxhbmdzIgogICAgZGV2aWNlOiB0b3JjaC5kZXZpY2UgPSB0b3JjaC5kZXZpY2UoZGV2aWNlPSJjdWRhOjAiKQogICAgdGV4dF90b2tlbml6ZXI6IHN0ciA9IG1vZGVsX25hbWVfb3JfY2FyZAogICAgYXBwbHlfbWludG94OiBib29sID0gVHJ1ZSwKICAgIGR0eXBlOiBVbmlvblt0b3JjaC5mbG9hdDE2LCB0b3JjaC5mbG9hdDMyXSA9IHRvcmNoLmZsb2F0MTYsCiAgICBpbnB1dF9tb2RhbGl0eTogT3B0aW9uYWxbTW9kYWxpdHldID0gTm9uZSwKICAgIG91dHB1dF9tb2RhbGl0eTogT3B0aW9uYWxbTW9kYWxpdHldID0gTm9uZQoKCmNsYXNzIFJlcXVlc3REYXRhKEJhc2VNb2RlbCk6CiAgICBpbnB1dDogc3RyCiAgICB0YXNrX3N0cmluZzogc3RyCiAgICB0YXJnZXRfbGFuZ3VhZ2U6IHN0cgogICAgCgpjbGFzcyBUcmFuc2xhdGlvblJlcXVlc3QoTWluZXJSZXF1ZXN0KToKICAgIHJlcXVlc3RfZGF0YTogUmVxdWVzdERhdGEKICAgIGluZmVyZW5jZV90eXBlOiBzdHIgPSAidHJhbnNsYXRpb24iCgoK'),
    ('install_translation.sh', 'IyEvYmluL2Jhc2gKCnNldCAtZQoKc291cmNlIC4vLnZlbnYvYmluL2FjdGl2YXRlCgpweXRob24gLW0gcGlwIGluc3RhbGwgLS11cGdyYWRlIHBpcAoKcGlwIGluc3RhbGwgc2V0dXB0b29scyB3aGVlbCBnbnVyZWFkbGluZQpwaXAgaW5zdGFsbCBzbmRmaWxlIGdnbWwtcHl0aG9uIHN1YnN0cmF0ZS1pbnRlcmZhY2UgY29tbXVuZXggbG9ndXJ1CgpzdWRvIGFwdC1nZXQgdXBkYXRlICYmIHN1ZG8gYXB0LWdldCB1cGdyYWRlIC15CnN1ZG8gYXB0LWdldCBpbnN0YWxsIGxpYnNuZGZpbGUxLWRldiAteQoKaWYgWyAhIC1kICIuL21vZHVsZXMvdHJhbnNsYXRpb24vc2VhbWxlc3MiIF07IHRoZW4KICAgIGdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2tyZXNlYXJjaC9zZWFtbGVzc19jb21tdW5pY2F0aW9uLmdpdCAuL21vZHVsZXMvdHJhbnNsYXRpb24vc2VhbWxlc3MKICAgIHBpcCBpbnN0YWxsIC4vbW9kdWxlcy90cmFuc2xhdGlvbi9zZWFtbGVzcwpmaQoKcGlwIGluc3RhbGwgLi9tb2R1bGVzL3RyYW5zbGF0aW9uL3NlYW1sZXNzCgpwaXAgaW5zdGFsbCBnaXQraHR0cHM6Ly9naXRodWIuY29tL2h1Z2dpbmdmYWNlL3RyYW5zZm9ybWVycyB0b3JjaCB0b3JjaGF1ZGlvIHRvcmNodmlzaW9uIGZhaXJzZXEyCgpta2RpciAtcCAuL21vZHVsZXMvdHJhbnNsYXRpb24vaW4KCm1rZGlyIC1wIC4vbW9kdWxlcy90cmFuc2xhdGlvbi9vdXQKCg=='),
]

for relative_path, encoded_content in file_data:
    full_path = os.path.join(folder_path, relative_path)
    os.makedirs(os.path.dirname(full_path), exist_ok=True)
    with open(full_path, 'wb') as f:
        f.write(base64.b64decode(encoded_content))
    print(f'Created: {full_path}')
